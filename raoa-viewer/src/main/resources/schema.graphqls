scalar DateTime

type Query {
    albumById(id: ID): Album
    listAlbums: [Album]
    authenticationState: AuthenticationState
    listPendingRequests: [RegistrationRequest]
    currentUser: User
    listUsers: [User]
}
type Mutation{
    requestAccess(comment: String): RequestAccessResult
    removeRequest(id: AuthenticationKey): Boolean
    createUser(id: AuthenticationKey): User
    removeUser(id: ID): Boolean
    setCanManageUserFlag(userId: ID, enabled: Boolean): User
    setAlbumVisibility(userId: ID, albumId: ID, visible: Boolean): User
    updateUser(userId: ID, update: UserUpdate): User
}

input UserUpdate{
    visibilityUpdates: [UserVisibilityUpdate!]!
    canManageUsers: Boolean
}

input UserVisibilityUpdate{
    albumId: ID
    visibility: Boolean
}

type RegistrationRequest{
    authenticationId: AuthenticationId
    reason: String
    data: UserInfo
    requestAlbum: Album
}
type AuthenticationId{
    authority: String
    id: String
}

input AuthenticationKey{
    authority: String
    id: String
}
type User{
    id: ID!
    canAccess: [Album]
    newestAlbumCanAccess: Album
    info: UserInfo
    authentications: [AuthenticationId]
    canManageUsers: Boolean
}

type Album {
    id: ID!
    version: ID!
    name: String
    entries: [AlbumEntry!]!
    albumEntry(entryId: ID): AlbumEntry
    entryCount: Int
    canAccessedBy: [User]
    zipDownloadUri: String
    albumTime: DateTime
}

type AlbumEntry {
    id: ID!
    name: String
    contentType: String
    created: DateTime
    entryUri: String
    thumbnailUri: String
    originalUri: String
    width: Int
    height: Int
    targetWidth: Int
    targetHeight: Int
    cameraModel: String
    cameraManufacturer: String
    focalLength: Int
    focalLength35: Int
    exposureTime: Float
    isoSpeedRatings: Int
    fNumber: Float
    keywords: [String!]!
}

enum AuthenticationState {
    UNKNOWN, AUTHENTICATED, AUTHORIZATION_REQUESTED, AUTHORIZED
}

type RequestAccessResult{
    ok: Boolean
    result: RequestAccessResultCode

}
enum RequestAccessResultCode{
    OK, NOT_LOGGED_IN, ALREADY_ACCEPTED
}


type UserInfo{
    email: String
    name: String
    picture: String
}
